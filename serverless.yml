
service: the-oh-app

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  health-check:
    handler: handlers/healthCheck.index
    events:
      - http:
          path: /
          method: get
  event-create:
    handler: handlers/events.create
    events:
      - http:
          path: /events
          method: post
  event-list:
    handler: handlers/events.list
    events:
      - http:
          path: /events
          method: get
  event-show:
    handler: handlers/events.show
    events:
      - http:
          path: /events/{id}
          method: get
  event-update:
    handler: handlers/events.update
    events:
      - http:
          path: /events/{id}
          method: put
  event-delete:
    handler: handlers/events.destroy
    events:
      - http:
          path: /events/{id}
          method: delete
  event-reaction-create:
    handler: handlers/reactions.create
    events:
      - http: 
          path: /events/{id}/reactions
          method: post
  event-reaction-list:
    handler: handlers/reactions.list
    events:
      - http:
          path: /events/{id}/reactions
          method: get
  event-reaction-show:
    handler: handlers/reactions.show
    events:
      - http:
          path: /events/{id}/reactions/{reactionId}
          method: get
  event-reaction-delete:
    handler: handlers/reactions.destroy
    events:
      - http:
          path: /events/{id}/reactions/{reactionId}
          method: delete
  member-create:
    handler: handlers/members.create
    events:
      - http:
          path: /members
          method: post
  member-list:
    handler: handlers/members.list
    events:
      - http:
          path: /members
          method: get
  member-show:
    handler: handlers/members.show
    events:
      - http:
          path: /members/{id}
          method: get
  member-update:
    handler: handlers/members.update
    events:
      - http:
          path: /members/{id}
          method: put
  member-delete:
    handler: handlers/members.delete
    events:
      - http:
          path: /members/{id}
          method: delete
  device-create:
    handler: handlers/devices.create
    events:
      - http:
          path: /devices
          method: post
  device-list:
    handler: handlers/devices.list
    events:
      - http:
          path: /devices
          method: get
  device-show:
    handler: handlers/devices.show
    events:
      - http:
          path: /devices/{id}
          method: get
  device-update:
    handler: handlers/devices.update
    events:
      - http:
          path: /devices/{id}
          method: put
  device-delete:
    handler: handlers/devices.delete
    events:
      - http:
          path: /devices/{id}
          method: delete

resources:
  Resources:
    MembersTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: members
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    DevicesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: devices
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    EventsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: events
        AttributeDefinitions:
          - AttributeName: geohash
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: geohash
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    ReactionsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: reactions
        AttributeDefinitions:
          - AttributeName: targetId
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: targetId
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
